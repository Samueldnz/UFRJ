QuickSelect(V, início, fim, K)
{
    Se fim - início == 1
        return V[início]
    
    pospivot = particiona(V, início, fim)
    
    se pospivot = K
        return V(K)
    se K < pospivot 
        return QuickSelect(V, inicio, pospivot, K)
    else
        return QuickSelect(V, pospivot, fim, K)
}

particiona(V, inicio, fim)
{
    pos = rand(inicio, fim -1)
    pivot = V[pos]
    V[pos] = V[inicio]
    V[inicio] = pivot

    i = inicio + 1
    j = fim - 1

    while(i<j){
        while(i<fim && V[i]<pivot){
            i++
        }

        while(j>inicio && V(j)>=pivot){
            j--
        }
        se i<j
            temp = V[i]
            V[i] = V[j]
            V[j] = temp
    }

    V[inicio] = V[j];
    V[j] = pivot
    return j
}